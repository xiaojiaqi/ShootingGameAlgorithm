List4-4 連續射擊與集氣射擊共存
void SemiAutoShot(
	bool button,    //按鈕的狀態（被按押時為true）
	int min_power,  //累積能量的最小值
	int max_power,  //累積能量的最大值
	int max_gauge   //連續射擊計量表的最大值
) {
	//累積能量、連續射擊計量表
	static int power=0, gauge=0;

	//按住按鈕時
	if (button) {
		
		//累積能量不足時：
		//發射普通子彈。
		//具體處理是以Shot函數來執行。
		if (power<min_power) Shot();
	
		//累積能量足夠時：
		//顯示累積的狀態。
		//具體處理是以PowerEffect函數來執行。
		else PowerEffect();
	
		//增加累積能量，使連續射擊計量表為最大
		if (power<max_power) power++;
		gauge=max_gauge;
	}
	
	//放開按鈕時：
	else {
		
		//累積能量足夠時：
		//發射集氣彈：
		//能量為最大時，發射特殊子彈。
		//具體處理是以MaxShot函數與BigShot函數來執行。
		if (min_power<=power) {
			if (power==max_power) MaxShot(); 
				else BigShot(power);
			gauge=0;
		}
		
		//連續射擊計量表>0時：
		//發射普通子彈，使連續射擊計量表-1。 
		//具體處理是以Shot函數來執行。
		if (gauge>0) {
			Shot();
			gauge--;
		}

		//使累積能量為0 
		power=0;
	}
}
